;;================================================
;; gl-wrapper.lisp
;;
;; written by R.Ueda (garaemon)
;;================================================
(declaim (optimize (debug 3)
                   (safety 3)))


(in-package :gl)

(defun push-matrix ()
  (glPushMatrix))

(defun pop-matrix ()
  (glPopMatrix))

(defun push-attrib (bits)
  (glPushAttrib bits))

(defun pop-attrib ()
  (glPopAttrib))

(defun enable (op)
  (glEnable op))

(defun disable (op)
  (glDisable op))

(defun clear-color (a b c d)
  (glClearColor a b c d))

(defun vertex-3f (a b c)
  (glVertex3f a b c))

(defun vertex-3d (a b c)
  (glVertex3d a b c))

(defun translate-f (a b c)
  (glTranslatef a b c))

(defun translate-d (a b c)
  (glTranslated a b c))

(defun normal-3f (a b c)
  (glNormal3f a b c))

(defun normal-3d (a b c)
  (glNormal3d a b c))

(defun begin (op)
  (glBegin op))

(defun end ()
  (glEnd))

(defun color-3f (a b c)
  (glColor3f a b c))

(defun color-3d (a b c)
  (glColor3d a b c))

(defun tex-coord-2f (a b)
  (glTexCoord2f a b))
(defun tex-coord-2d (a b)
  (glTexCoord2d a b))

(defun gen-textures (num ret)
  (glGenTextures num ret))

(defun gen-lists (num)
  (glGenLists num))

(defun new-list (list op)
  (glNewList list op))

(defun end-list ()
  (glEndList))

(defun depth-mask (bool)
  (glDepthMask bool))

(defun blend-func (a b)
  (glBlendFunc a b))

(defun tex-parameter-i (a b c)
  (glTexParameteri a b c))

(defun bind-texture (type name)
  (glBindTexture type name))

(defun tex-image-2d (target
                     &key
                     (level 0)
                     (internal-format nil)
                     (width nil)
                     (height nil)
                     (border nil)
                     (format nil)
                     (type nil)
                     (data nil))
  (check-args-error "You have to set"
                    (internal-format :internal-format #'null)
                    (width :width #'null)
                    (height :height #'null)
                    (border :border #'null)
                    (format :format #'null)
                    (type :type #'null)
                    (data :type #'null))
  (glTexImage2d target
                level
                internal-format
                width
                height
                border
                format
                type
                data))

(defun call-list (l)
  (glCallList l))

(defun tex-env-i (a b c)
  (glTexEnvi a b c))

(defun pixel-store-i (a b)
  (glPixelStorei a b))

(defun front-face (a)
  (glFrontFace a))

(defun cull-face (a)
  (glCullFace a))

(defun shade-model (a)
  (glShadeModel a))

(defun viewport (a b c d)
  (glViewport a b c d))

(defun matrix-mode (a)
  (glMatrixMode a))

(defun load-identity ()
  (glLoadIdentity))

(defun flush ()
  (glFlush))

(defun depth-func (func)
  (glDepthFunc func))

(defun clear (mask)
  (glClear mask))

;; constants
(alexandria:define-constant +version-1-1+ GL_VERSION_1_1)
(alexandria:define-constant +version-1-2+ GL_VERSION_1_2)
(alexandria:define-constant +version-1-3+ GL_VERSION_1_3)
(alexandria:define-constant +version-1-4+ GL_VERSION_1_4)
(alexandria:define-constant +version-1-5+ GL_VERSION_1_5)
(alexandria:define-constant +version-2-0+ GL_VERSION_2_0)
(alexandria:define-constant +version-2-1+ GL_VERSION_2_1)
(alexandria:define-constant +accum+ GL_ACCUM)
(alexandria:define-constant +load+ GL_LOAD)
(alexandria:define-constant +return+ GL_RETURN)
(alexandria:define-constant +mult+ GL_MULT)
(alexandria:define-constant +add+ GL_ADD)
(alexandria:define-constant +never+ GL_NEVER)
(alexandria:define-constant +less+ GL_LESS)
(alexandria:define-constant +equal+ GL_EQUAL)
(alexandria:define-constant +lequal+ GL_LEQUAL)
(alexandria:define-constant +greater+ GL_GREATER)
(alexandria:define-constant +not-equal+ GL_NOTEQUAL)
(alexandria:define-constant +gequal+ GL_GEQUAL)
(alexandria:define-constant +always+ GL_ALWAYS)
(alexandria:define-constant +current-bit+ GL_CURRENT_BIT)
(alexandria:define-constant +point-bit+ GL_POINT_BIT)
(alexandria:define-constant +line-bit+ GL_LINE_BIT)
(alexandria:define-constant +polygon-bit+ GL_POLYGON_BIT)
(alexandria:define-constant +polygon-stipple-bit+ GL_POLYGON_STIPPLE_BIT)
(alexandria:define-constant +pixel-mode-bit+ GL_PIXEL_MODE_BIT)
(alexandria:define-constant +lighting-bit+ GL_LIGHTING_BIT)
(alexandria:define-constant +fog-bit+ GL_FOG_BIT)
(alexandria:define-constant +depth-buffer-bit+ GL_DEPTH_BUFFER_BIT)
(alexandria:define-constant +accum-buffer-bit+ GL_ACCUM_BUFFER_BIT)
(alexandria:define-constant +stencil-buffer-bit+ GL_STENCIL_BUFFER_BIT)
(alexandria:define-constant +viewport-bit+ GL_VIEWPORT_BIT)
(alexandria:define-constant +transform-bit+ GL_TRANSFORM_BIT)
(alexandria:define-constant +enable-bit+ GL_ENABLE_BIT)
(alexandria:define-constant +color-buffer-bit+ GL_COLOR_BUFFER_BIT)
(alexandria:define-constant +hint-bit+ GL_HINT_BIT)
(alexandria:define-constant +eval-bit+ GL_EVAL_BIT)
(alexandria:define-constant +list-bit+ GL_LIST_BIT)
(alexandria:define-constant +texture-bit+ GL_TEXTURE_BIT)
(alexandria:define-constant +scissor-bit+ GL_SCISSOR_BIT)
(alexandria:define-constant +all-attrib-bits+ GL_ALL_ATTRIB_BITS)
(alexandria:define-constant +points+ GL_POINTS)
(alexandria:define-constant +lines+ GL_LINES)
(alexandria:define-constant +line-loop+ GL_LINE_LOOP)
(alexandria:define-constant +line-strip+ GL_LINE_STRIP)
(alexandria:define-constant +triangles+ GL_TRIANGLES)
(alexandria:define-constant +triangle-strip+ GL_TRIANGLE_STRIP)
(alexandria:define-constant +triangle-fan+ GL_TRIANGLE_FAN)
(alexandria:define-constant +quads+ GL_QUADS)
(alexandria:define-constant +quad-strip+ GL_QUAD_STRIP)
(alexandria:define-constant +polygon+ GL_POLYGON)
(alexandria:define-constant +zero+ GL_ZERO)
(alexandria:define-constant +one+ GL_ONE)
(alexandria:define-constant +src-color+ GL_SRC_COLOR)
(alexandria:define-constant +one-minus-src-color+ GL_ONE_MINUS_SRC_COLOR)
(alexandria:define-constant +src-alpha+ GL_SRC_ALPHA)
(alexandria:define-constant +one-minus-src-alpha+ GL_ONE_MINUS_SRC_ALPHA)
(alexandria:define-constant +dst-alpha+ GL_DST_ALPHA)
(alexandria:define-constant +one-minus-dst-alpha+ GL_ONE_MINUS_DST_ALPHA)
(alexandria:define-constant +dst-color+ GL_DST_COLOR)
(alexandria:define-constant +one-minus-dst-color+ GL_ONE_MINUS_DST_COLOR)
(alexandria:define-constant +src-alpha-saturate+ GL_SRC_ALPHA_SATURATE)
(alexandria:define-constant +true+ GL_TRUE)
(alexandria:define-constant +false+ GL_FALSE)
(alexandria:define-constant +clip-plane0+ GL_CLIP_PLANE0)
(alexandria:define-constant +clip-plane1+ GL_CLIP_PLANE1)
(alexandria:define-constant +clip-plane2+ GL_CLIP_PLANE2)
(alexandria:define-constant +clip-plane3+ GL_CLIP_PLANE3)
(alexandria:define-constant +clip-plane4+ GL_CLIP_PLANE4)
(alexandria:define-constant +clip-plane5+ GL_CLIP_PLANE5)
(alexandria:define-constant +byte+ GL_BYTE)
(alexandria:define-constant +unsigned-byte+ GL_UNSIGNED_BYTE)
(alexandria:define-constant +short+ GL_SHORT)
(alexandria:define-constant +unsigned-short+ GL_UNSIGNED_SHORT)
(alexandria:define-constant +int+ GL_INT)
(alexandria:define-constant +unsigned-int+ GL_UNSIGNED_INT)
(alexandria:define-constant +float+ GL_FLOAT)
(alexandria:define-constant +2-bytes+ GL_2_BYTES)
(alexandria:define-constant +3-bytes+ GL_3_BYTES)
(alexandria:define-constant +4-bytes+ GL_4_BYTES)
(alexandria:define-constant +double+ GL_DOUBLE)
(alexandria:define-constant +none+ GL_NONE)
(alexandria:define-constant +front-left+ GL_FRONT_LEFT)
(alexandria:define-constant +front-right+ GL_FRONT_RIGHT)
(alexandria:define-constant +back-left+ GL_BACK_LEFT)
(alexandria:define-constant +back-right+ GL_BACK_RIGHT)
(alexandria:define-constant +front+ GL_FRONT)
(alexandria:define-constant +back+ GL_BACK)
(alexandria:define-constant +left+ GL_LEFT)
(alexandria:define-constant +right+ GL_RIGHT)
(alexandria:define-constant +front-and-back+ GL_FRONT_AND_BACK)
(alexandria:define-constant +aux0+ GL_AUX0)
(alexandria:define-constant +aux1+ GL_AUX1)
(alexandria:define-constant +aux2+ GL_AUX2)
(alexandria:define-constant +aux3+ GL_AUX3)
(alexandria:define-constant +no-error+ GL_NO_ERROR)
(alexandria:define-constant +invalid-enum+ GL_INVALID_ENUM)
(alexandria:define-constant +invalid-value+ GL_INVALID_VALUE)
(alexandria:define-constant +invalid-operation+ GL_INVALID_OPERATION)
(alexandria:define-constant +stack-overflow+ GL_STACK_OVERFLOW)
(alexandria:define-constant +stack-underflow+ GL_STACK_UNDERFLOW)
(alexandria:define-constant +out-of-memory+ GL_OUT_OF_MEMORY)
(alexandria:define-constant +2d+ GL_2D)
(alexandria:define-constant +3d+ GL_3D)
(alexandria:define-constant +3d-color+ GL_3D_COLOR)
(alexandria:define-constant +3d-color-texture+ GL_3D_COLOR_TEXTURE)
(alexandria:define-constant +4d-color-texture+ GL_4D_COLOR_TEXTURE)
(alexandria:define-constant +pass-through-token+ GL_PASS_THROUGH_TOKEN)
(alexandria:define-constant +point-token+ GL_POINT_TOKEN)
(alexandria:define-constant +line-token+ GL_LINE_TOKEN)
(alexandria:define-constant +polygon-token+ GL_POLYGON_TOKEN)
(alexandria:define-constant +bitmap-token+ GL_BITMAP_TOKEN)
(alexandria:define-constant +draw-pixel-token+ GL_DRAW_PIXEL_TOKEN)
(alexandria:define-constant +copy-pixel-token+ GL_COPY_PIXEL_TOKEN)
(alexandria:define-constant +line-reset-token+ GL_LINE_RESET_TOKEN)
(alexandria:define-constant +exp+ GL_EXP)
(alexandria:define-constant +exp2+ GL_EXP2)
(alexandria:define-constant +cw+ GL_CW)
(alexandria:define-constant +ccw+ GL_CCW)
(alexandria:define-constant +coeff+ GL_COEFF)
(alexandria:define-constant +order+ GL_ORDER)
(alexandria:define-constant +domain+ GL_DOMAIN)
(alexandria:define-constant +current-color+ GL_CURRENT_COLOR)
(alexandria:define-constant +current-index+ GL_CURRENT_INDEX)
(alexandria:define-constant +current-normal+ GL_CURRENT_NORMAL)
(alexandria:define-constant +current-texture-coords+ GL_CURRENT_TEXTURE_COORDS)
(alexandria:define-constant +current-raster-color+ GL_CURRENT_RASTER_COLOR)
(alexandria:define-constant +current-raster-index+ GL_CURRENT_RASTER_INDEX)
(alexandria:define-constant +current-raster-texture-coords+ GL_CURRENT_RASTER_TEXTURE_COORDS)
(alexandria:define-constant +current-raster-position+ GL_CURRENT_RASTER_POSITION)
(alexandria:define-constant +current-raster-position-valid+ GL_CURRENT_RASTER_POSITION_VALID)
(alexandria:define-constant +current-raster-distance+ GL_CURRENT_RASTER_DISTANCE)
(alexandria:define-constant +point-smooth+ GL_POINT_SMOOTH)
(alexandria:define-constant +point-size+ GL_POINT_SIZE)
(alexandria:define-constant +point-size-range+ GL_POINT_SIZE_RANGE)
(alexandria:define-constant +point-size-granularity+ GL_POINT_SIZE_GRANULARITY)
(alexandria:define-constant +line-smooth+ GL_LINE_SMOOTH)
(alexandria:define-constant +line-width+ GL_LINE_WIDTH)
(alexandria:define-constant +line-width-range+ GL_LINE_WIDTH_RANGE)
(alexandria:define-constant +line-width-granularity+ GL_LINE_WIDTH_GRANULARITY)
(alexandria:define-constant +line-stipple+ GL_LINE_STIPPLE)
(alexandria:define-constant +line-stipple-pattern+ GL_LINE_STIPPLE_PATTERN)
(alexandria:define-constant +line-stipple-repeat+ GL_LINE_STIPPLE_REPEAT)
(alexandria:define-constant +list-mode+ GL_LIST_MODE)
(alexandria:define-constant +max-list-nesting+ GL_MAX_LIST_NESTING)
(alexandria:define-constant +list-base+ GL_LIST_BASE)
(alexandria:define-constant +list-index+ GL_LIST_INDEX)
(alexandria:define-constant +polygon-mode+ GL_POLYGON_MODE)
(alexandria:define-constant +polygon-smooth+ GL_POLYGON_SMOOTH)
(alexandria:define-constant +polygon-stipple+ GL_POLYGON_STIPPLE)
(alexandria:define-constant +edge-flag+ GL_EDGE_FLAG)
(alexandria:define-constant +cull-face+ GL_CULL_FACE)
(alexandria:define-constant +cull-face-mode+ GL_CULL_FACE_MODE)
(alexandria:define-constant +front-face+ GL_FRONT_FACE)
(alexandria:define-constant +lighting+ GL_LIGHTING)
(alexandria:define-constant +light-model-local-viewer+ GL_LIGHT_MODEL_LOCAL_VIEWER)
(alexandria:define-constant +light-model-two-side+ GL_LIGHT_MODEL_TWO_SIDE)
(alexandria:define-constant +light-model-ambient+ GL_LIGHT_MODEL_AMBIENT)
(alexandria:define-constant +shade-model+ GL_SHADE_MODEL)
(alexandria:define-constant +color-material-face+ GL_COLOR_MATERIAL_FACE)
(alexandria:define-constant +color-material-parameter+ GL_COLOR_MATERIAL_PARAMETER)
(alexandria:define-constant +color-material+ GL_COLOR_MATERIAL)
(alexandria:define-constant +fog+ GL_FOG)
(alexandria:define-constant +fog-index+ GL_FOG_INDEX)
(alexandria:define-constant +fog-density+ GL_FOG_DENSITY)
(alexandria:define-constant +fog-start+ GL_FOG_START)
(alexandria:define-constant +fog-end+ GL_FOG_END)
(alexandria:define-constant +fog-mode+ GL_FOG_MODE)
(alexandria:define-constant +fog-color+ GL_FOG_COLOR)
(alexandria:define-constant +depth-range+ GL_DEPTH_RANGE)
(alexandria:define-constant +depth-test+ GL_DEPTH_TEST)
(alexandria:define-constant +depth-writemask+ GL_DEPTH_WRITEMASK)
(alexandria:define-constant +depth-clear-value+ GL_DEPTH_CLEAR_VALUE)
(alexandria:define-constant +depth-func+ GL_DEPTH_FUNC)
(alexandria:define-constant +accum-clear-value+ GL_ACCUM_CLEAR_VALUE)
(alexandria:define-constant +stencil-test+ GL_STENCIL_TEST)
(alexandria:define-constant +stencil-clear-value+ GL_STENCIL_CLEAR_VALUE)
(alexandria:define-constant +stencil-func+ GL_STENCIL_FUNC)
(alexandria:define-constant +stencil-value-mask+ GL_STENCIL_VALUE_MASK)
(alexandria:define-constant +stencil-fail+ GL_STENCIL_FAIL)
(alexandria:define-constant +stencil-pass-depth-fail+ GL_STENCIL_PASS_DEPTH_FAIL)
(alexandria:define-constant +stencil-pass-depth-pass+ GL_STENCIL_PASS_DEPTH_PASS)
(alexandria:define-constant +stencil-ref+ GL_STENCIL_REF)
(alexandria:define-constant +stencil-writemask+ GL_STENCIL_WRITEMASK)
(alexandria:define-constant +matrix-mode+ GL_MATRIX_MODE)
(alexandria:define-constant +normalize+ GL_NORMALIZE)
(alexandria:define-constant +viewport+ GL_VIEWPORT)
(alexandria:define-constant +modelview-stack-depth+ GL_MODELVIEW_STACK_DEPTH)
(alexandria:define-constant +projection-stack-depth+ GL_PROJECTION_STACK_DEPTH)
(alexandria:define-constant +texture-stack-depth+ GL_TEXTURE_STACK_DEPTH)
(alexandria:define-constant +modelview-matrix+ GL_MODELVIEW_MATRIX)
(alexandria:define-constant +projection-matrix+ GL_PROJECTION_MATRIX)
(alexandria:define-constant +texture-matrix+ GL_TEXTURE_MATRIX)
(alexandria:define-constant +attrib-stack-depth+ GL_ATTRIB_STACK_DEPTH)
(alexandria:define-constant +client-attrib-stack-depth+ GL_CLIENT_ATTRIB_STACK_DEPTH)
(alexandria:define-constant +alpha-test+ GL_ALPHA_TEST)
(alexandria:define-constant +alpha-test-func+ GL_ALPHA_TEST_FUNC)
(alexandria:define-constant +alpha-test-ref+ GL_ALPHA_TEST_REF)
(alexandria:define-constant +dither+ GL_DITHER)
(alexandria:define-constant +blend-dst+ GL_BLEND_DST)
(alexandria:define-constant +blend-src+ GL_BLEND_SRC)
(alexandria:define-constant +blend+ GL_BLEND)
(alexandria:define-constant +logic-op-mode+ GL_LOGIC_OP_MODE)
(alexandria:define-constant +index-logic-op+ GL_INDEX_LOGIC_OP)
(alexandria:define-constant +color-logic-op+ GL_COLOR_LOGIC_OP)
(alexandria:define-constant +aux-buffers+ GL_AUX_BUFFERS)
(alexandria:define-constant +draw-buffer+ GL_DRAW_BUFFER)
(alexandria:define-constant +read-buffer+ GL_READ_BUFFER)
(alexandria:define-constant +scissor-box+ GL_SCISSOR_BOX)
(alexandria:define-constant +scissor-test+ GL_SCISSOR_TEST)
(alexandria:define-constant +index-clear-value+ GL_INDEX_CLEAR_VALUE)
(alexandria:define-constant +index-writemask+ GL_INDEX_WRITEMASK)
(alexandria:define-constant +color-clear-value+ GL_COLOR_CLEAR_VALUE)
(alexandria:define-constant +color-writemask+ GL_COLOR_WRITEMASK)
(alexandria:define-constant +index-mode+ GL_INDEX_MODE)
(alexandria:define-constant +rgba-mode+ GL_RGBA_MODE)
(alexandria:define-constant +doublebuffer+ GL_DOUBLEBUFFER)
(alexandria:define-constant +stereo+ GL_STEREO)
(alexandria:define-constant +render-mode+ GL_RENDER_MODE)
(alexandria:define-constant +perspective-correction-hint+ GL_PERSPECTIVE_CORRECTION_HINT)
(alexandria:define-constant +point-smooth-hint+ GL_POINT_SMOOTH_HINT)
(alexandria:define-constant +line-smooth-hint+ GL_LINE_SMOOTH_HINT)
(alexandria:define-constant +polygon-smooth-hint+ GL_POLYGON_SMOOTH_HINT)
(alexandria:define-constant +fog-hint+ GL_FOG_HINT)
(alexandria:define-constant +texture-gen-s+ GL_TEXTURE_GEN_S)
(alexandria:define-constant +texture-gen-t+ GL_TEXTURE_GEN_T)
(alexandria:define-constant +texture-gen-r+ GL_TEXTURE_GEN_R)
(alexandria:define-constant +texture-gen-q+ GL_TEXTURE_GEN_Q)
(alexandria:define-constant +pixel-map-i-to-i+ GL_PIXEL_MAP_I_TO_I)
(alexandria:define-constant +pixel-map-s-to-s+ GL_PIXEL_MAP_S_TO_S)
(alexandria:define-constant +pixel-map-i-to-r+ GL_PIXEL_MAP_I_TO_R)
(alexandria:define-constant +pixel-map-i-to-g+ GL_PIXEL_MAP_I_TO_G)
(alexandria:define-constant +pixel-map-i-to-b+ GL_PIXEL_MAP_I_TO_B)
(alexandria:define-constant +pixel-map-i-to-a+ GL_PIXEL_MAP_I_TO_A)
(alexandria:define-constant +pixel-map-r-to-r+ GL_PIXEL_MAP_R_TO_R)
(alexandria:define-constant +pixel-map-g-to-g+ GL_PIXEL_MAP_G_TO_G)
(alexandria:define-constant +pixel-map-b-to-b+ GL_PIXEL_MAP_B_TO_B)
(alexandria:define-constant +pixel-map-a-to-a+ GL_PIXEL_MAP_A_TO_A)
(alexandria:define-constant +pixel-map-i-to-i-size+ GL_PIXEL_MAP_I_TO_I_SIZE)
(alexandria:define-constant +pixel-map-s-to-s-size+ GL_PIXEL_MAP_S_TO_S_SIZE)
(alexandria:define-constant +pixel-map-i-to-r-size+ GL_PIXEL_MAP_I_TO_R_SIZE)
(alexandria:define-constant +pixel-map-i-to-g-size+ GL_PIXEL_MAP_I_TO_G_SIZE)
(alexandria:define-constant +pixel-map-i-to-b-size+ GL_PIXEL_MAP_I_TO_B_SIZE)
(alexandria:define-constant +pixel-map-i-to-a-size+ GL_PIXEL_MAP_I_TO_A_SIZE)
(alexandria:define-constant +pixel-map-r-to-r-size+ GL_PIXEL_MAP_R_TO_R_SIZE)
(alexandria:define-constant +pixel-map-g-to-g-size+ GL_PIXEL_MAP_G_TO_G_SIZE)
(alexandria:define-constant +pixel-map-b-to-b-size+ GL_PIXEL_MAP_B_TO_B_SIZE)
(alexandria:define-constant +pixel-map-a-to-a-size+ GL_PIXEL_MAP_A_TO_A_SIZE)
(alexandria:define-constant +unpack-swap-bytes+ GL_UNPACK_SWAP_BYTES)
(alexandria:define-constant +unpack-lsb-first+ GL_UNPACK_LSB_FIRST)
(alexandria:define-constant +unpack-row-length+ GL_UNPACK_ROW_LENGTH)
(alexandria:define-constant +unpack-skip-rows+ GL_UNPACK_SKIP_ROWS)
(alexandria:define-constant +unpack-skip-pixels+ GL_UNPACK_SKIP_PIXELS)
(alexandria:define-constant +unpack-alignment+ GL_UNPACK_ALIGNMENT)
(alexandria:define-constant +pack-swap-bytes+ GL_PACK_SWAP_BYTES)
(alexandria:define-constant +pack-lsb-first+ GL_PACK_LSB_FIRST)
(alexandria:define-constant +pack-row-length+ GL_PACK_ROW_LENGTH)
(alexandria:define-constant +pack-skip-rows+ GL_PACK_SKIP_ROWS)
(alexandria:define-constant +pack-skip-pixels+ GL_PACK_SKIP_PIXELS)
(alexandria:define-constant +pack-alignment+ GL_PACK_ALIGNMENT)
(alexandria:define-constant +map-color+ GL_MAP_COLOR)
(alexandria:define-constant +map-stencil+ GL_MAP_STENCIL)
(alexandria:define-constant +index-shift+ GL_INDEX_SHIFT)
(alexandria:define-constant +index-offset+ GL_INDEX_OFFSET)
(alexandria:define-constant +red-scale+ GL_RED_SCALE)
(alexandria:define-constant +red-bias+ GL_RED_BIAS)
(alexandria:define-constant +zoom-x+ GL_ZOOM_X)
(alexandria:define-constant +zoom-y+ GL_ZOOM_Y)
(alexandria:define-constant +green-scale+ GL_GREEN_SCALE)
(alexandria:define-constant +green-bias+ GL_GREEN_BIAS)
(alexandria:define-constant +blue-scale+ GL_BLUE_SCALE)
(alexandria:define-constant +blue-bias+ GL_BLUE_BIAS)
(alexandria:define-constant +alpha-scale+ GL_ALPHA_SCALE)
(alexandria:define-constant +alpha-bias+ GL_ALPHA_BIAS)
(alexandria:define-constant +depth-scale+ GL_DEPTH_SCALE)
(alexandria:define-constant +depth-bias+ GL_DEPTH_BIAS)
(alexandria:define-constant +max-eval-order+ GL_MAX_EVAL_ORDER)
(alexandria:define-constant +max-lights+ GL_MAX_LIGHTS)
(alexandria:define-constant +max-clip-planes+ GL_MAX_CLIP_PLANES)
(alexandria:define-constant +max-texture-size+ GL_MAX_TEXTURE_SIZE)
(alexandria:define-constant +max-pixel-map-table+ GL_MAX_PIXEL_MAP_TABLE)
(alexandria:define-constant +max-attrib-stack-depth+ GL_MAX_ATTRIB_STACK_DEPTH)
(alexandria:define-constant +max-modelview-stack-depth+ GL_MAX_MODELVIEW_STACK_DEPTH)
(alexandria:define-constant +max-name-stack-depth+ GL_MAX_NAME_STACK_DEPTH)
(alexandria:define-constant +max-projection-stack-depth+ GL_MAX_PROJECTION_STACK_DEPTH)
(alexandria:define-constant +max-texture-stack-depth+ GL_MAX_TEXTURE_STACK_DEPTH)
(alexandria:define-constant +max-viewport-dims+ GL_MAX_VIEWPORT_DIMS)
(alexandria:define-constant +max-client-attrib-stack-depth+ GL_MAX_CLIENT_ATTRIB_STACK_DEPTH)
(alexandria:define-constant +subpixel-bits+ GL_SUBPIXEL_BITS)
(alexandria:define-constant +index-bits+ GL_INDEX_BITS)
(alexandria:define-constant +red-bits+ GL_RED_BITS)
(alexandria:define-constant +green-bits+ GL_GREEN_BITS)
(alexandria:define-constant +blue-bits+ GL_BLUE_BITS)
(alexandria:define-constant +alpha-bits+ GL_ALPHA_BITS)
(alexandria:define-constant +depth-bits+ GL_DEPTH_BITS)
(alexandria:define-constant +stencil-bits+ GL_STENCIL_BITS)
(alexandria:define-constant +accum-red-bits+ GL_ACCUM_RED_BITS)
(alexandria:define-constant +accum-green-bits+ GL_ACCUM_GREEN_BITS)
(alexandria:define-constant +accum-blue-bits+ GL_ACCUM_BLUE_BITS)
(alexandria:define-constant +accum-alpha-bits+ GL_ACCUM_ALPHA_BITS)
(alexandria:define-constant +name-stack-depth+ GL_NAME_STACK_DEPTH)
(alexandria:define-constant +auto-normal+ GL_AUTO_NORMAL)
(alexandria:define-constant +map1-color-4+ GL_MAP1_COLOR_4)
(alexandria:define-constant +map1-index+ GL_MAP1_INDEX)
(alexandria:define-constant +map1-normal+ GL_MAP1_NORMAL)
(alexandria:define-constant +map1-texture-coord-1+ GL_MAP1_TEXTURE_COORD_1)
(alexandria:define-constant +map1-texture-coord-2+ GL_MAP1_TEXTURE_COORD_2)
(alexandria:define-constant +map1-texture-coord-3+ GL_MAP1_TEXTURE_COORD_3)
(alexandria:define-constant +map1-texture-coord-4+ GL_MAP1_TEXTURE_COORD_4)
(alexandria:define-constant +map1-vertex-3+ GL_MAP1_VERTEX_3)
(alexandria:define-constant +map1-vertex-4+ GL_MAP1_VERTEX_4)
(alexandria:define-constant +map2-color-4+ GL_MAP2_COLOR_4)
(alexandria:define-constant +map2-index+ GL_MAP2_INDEX)
(alexandria:define-constant +map2-normal+ GL_MAP2_NORMAL)
(alexandria:define-constant +map2-texture-coord-1+ GL_MAP2_TEXTURE_COORD_1)
(alexandria:define-constant +map2-texture-coord-2+ GL_MAP2_TEXTURE_COORD_2)
(alexandria:define-constant +map2-texture-coord-3+ GL_MAP2_TEXTURE_COORD_3)
(alexandria:define-constant +map2-texture-coord-4+ GL_MAP2_TEXTURE_COORD_4)
(alexandria:define-constant +map2-vertex-3+ GL_MAP2_VERTEX_3)
(alexandria:define-constant +map2-vertex-4+ GL_MAP2_VERTEX_4)
(alexandria:define-constant +map1-grid-domain+ GL_MAP1_GRID_DOMAIN)
(alexandria:define-constant +map1-grid-segments+ GL_MAP1_GRID_SEGMENTS)
(alexandria:define-constant +map2-grid-domain+ GL_MAP2_GRID_DOMAIN)
(alexandria:define-constant +map2-grid-segments+ GL_MAP2_GRID_SEGMENTS)
(alexandria:define-constant +texture-1d+ GL_TEXTURE_1D)
(alexandria:define-constant +texture-2d+ GL_TEXTURE_2D)
(alexandria:define-constant +feedback-buffer-pointer+ GL_FEEDBACK_BUFFER_POINTER)
(alexandria:define-constant +feedback-buffer-size+ GL_FEEDBACK_BUFFER_SIZE)
(alexandria:define-constant +feedback-buffer-type+ GL_FEEDBACK_BUFFER_TYPE)
(alexandria:define-constant +selection-buffer-pointer+ GL_SELECTION_BUFFER_POINTER)
(alexandria:define-constant +selection-buffer-size+ GL_SELECTION_BUFFER_SIZE)
(alexandria:define-constant +texture-width+ GL_TEXTURE_WIDTH)
(alexandria:define-constant +texture-height+ GL_TEXTURE_HEIGHT)
(alexandria:define-constant +texture-internal-format+ GL_TEXTURE_INTERNAL_FORMAT)
(alexandria:define-constant +texture-border-color+ GL_TEXTURE_BORDER_COLOR)
(alexandria:define-constant +texture-border+ GL_TEXTURE_BORDER)
(alexandria:define-constant +dont-care+ GL_DONT_CARE)
(alexandria:define-constant +fastest+ GL_FASTEST)
(alexandria:define-constant +nicest+ GL_NICEST)
(alexandria:define-constant +light0+ GL_LIGHT0)
(alexandria:define-constant +light1+ GL_LIGHT1)
(alexandria:define-constant +light2+ GL_LIGHT2)
(alexandria:define-constant +light3+ GL_LIGHT3)
(alexandria:define-constant +light4+ GL_LIGHT4)
(alexandria:define-constant +light5+ GL_LIGHT5)
(alexandria:define-constant +light6+ GL_LIGHT6)
(alexandria:define-constant +light7+ GL_LIGHT7)
(alexandria:define-constant +ambient+ GL_AMBIENT)
(alexandria:define-constant +diffuse+ GL_DIFFUSE)
(alexandria:define-constant +specular+ GL_SPECULAR)
(alexandria:define-constant +position+ GL_POSITION)
(alexandria:define-constant +spot-direction+ GL_SPOT_DIRECTION)
(alexandria:define-constant +spot-exponent+ GL_SPOT_EXPONENT)
(alexandria:define-constant +spot-cutoff+ GL_SPOT_CUTOFF)
(alexandria:define-constant +constant-attenuation+ GL_CONSTANT_ATTENUATION)
(alexandria:define-constant +linear-attenuation+ GL_LINEAR_ATTENUATION)
(alexandria:define-constant +quadratic-attenuation+ GL_QUADRATIC_ATTENUATION)
(alexandria:define-constant +compile+ GL_COMPILE)
(alexandria:define-constant +compile-and-execute+ GL_COMPILE_AND_EXECUTE)
(alexandria:define-constant +clear+ GL_CLEAR)
(alexandria:define-constant +and+ GL_AND)
(alexandria:define-constant +and-reverse+ GL_AND_REVERSE)
(alexandria:define-constant +copy+ GL_COPY)
(alexandria:define-constant +and-inverted+ GL_AND_INVERTED)
(alexandria:define-constant +noop+ GL_NOOP)
(alexandria:define-constant +xor+ GL_XOR)
(alexandria:define-constant +or+ GL_OR)
(alexandria:define-constant +nor+ GL_NOR)
(alexandria:define-constant +equiv+ GL_EQUIV)
(alexandria:define-constant +invert+ GL_INVERT)
(alexandria:define-constant +or-reverse+ GL_OR_REVERSE)
(alexandria:define-constant +copy-inverted+ GL_COPY_INVERTED)
(alexandria:define-constant +or-inverted+ GL_OR_INVERTED)
(alexandria:define-constant +nand+ GL_NAND)
(alexandria:define-constant +set+ GL_SET)
(alexandria:define-constant +emission+ GL_EMISSION)
(alexandria:define-constant +shininess+ GL_SHININESS)
(alexandria:define-constant +ambient-and-diffuse+ GL_AMBIENT_AND_DIFFUSE)
(alexandria:define-constant +color-indexes+ GL_COLOR_INDEXES)
(alexandria:define-constant +modelview+ GL_MODELVIEW)
(alexandria:define-constant +projection+ GL_PROJECTION)
(alexandria:define-constant +texture+ GL_TEXTURE)
(alexandria:define-constant +color+ GL_COLOR)
(alexandria:define-constant +depth+ GL_DEPTH)
(alexandria:define-constant +stencil+ GL_STENCIL)
(alexandria:define-constant +color-index+ GL_COLOR_INDEX)
(alexandria:define-constant +stencil-index+ GL_STENCIL_INDEX)
(alexandria:define-constant +depth-component+ GL_DEPTH_COMPONENT)
(alexandria:define-constant +red+ GL_RED)
(alexandria:define-constant +green+ GL_GREEN)
(alexandria:define-constant +blue+ GL_BLUE)
(alexandria:define-constant +alpha+ GL_ALPHA)
(alexandria:define-constant +rgb+ GL_RGB)
(alexandria:define-constant +rgba+ GL_RGBA)
(alexandria:define-constant +luminance+ GL_LUMINANCE)
(alexandria:define-constant +luminance-alpha+ GL_LUMINANCE_ALPHA)
(alexandria:define-constant +bitmap+ GL_BITMAP)
(alexandria:define-constant +point+ GL_POINT)
(alexandria:define-constant +line+ GL_LINE)
(alexandria:define-constant +fill+ GL_FILL)
(alexandria:define-constant +render+ GL_RENDER)
(alexandria:define-constant +feedback+ GL_FEEDBACK)
(alexandria:define-constant +select+ GL_SELECT)
(alexandria:define-constant +flat+ GL_FLAT)
(alexandria:define-constant +smooth+ GL_SMOOTH)
(alexandria:define-constant +keep+ GL_KEEP)
(alexandria:define-constant +replace+ GL_REPLACE)
(alexandria:define-constant +incr+ GL_INCR)
(alexandria:define-constant +decr+ GL_DECR)
(alexandria:define-constant +vendor+ GL_VENDOR)
(alexandria:define-constant +renderer+ GL_RENDERER)
(alexandria:define-constant +version+ GL_VERSION)
(alexandria:define-constant +extensions+ GL_EXTENSIONS)
(alexandria:define-constant +s+ GL_S)
(alexandria:define-constant +t+ GL_T)
(alexandria:define-constant +r+ GL_R)
(alexandria:define-constant +q+ GL_Q)
(alexandria:define-constant +modulate+ GL_MODULATE)
(alexandria:define-constant +decal+ GL_DECAL)
(alexandria:define-constant +texture-env-mode+ GL_TEXTURE_ENV_MODE)
(alexandria:define-constant +texture-env-color+ GL_TEXTURE_ENV_COLOR)
(alexandria:define-constant +texture-env+ GL_TEXTURE_ENV)
(alexandria:define-constant +eye-linear+ GL_EYE_LINEAR)
(alexandria:define-constant +object-linear+ GL_OBJECT_LINEAR)
(alexandria:define-constant +sphere-map+ GL_SPHERE_MAP)
(alexandria:define-constant +texture-gen-mode+ GL_TEXTURE_GEN_MODE)
(alexandria:define-constant +object-plane+ GL_OBJECT_PLANE)
(alexandria:define-constant +eye-plane+ GL_EYE_PLANE)
(alexandria:define-constant +nearest+ GL_NEAREST)
(alexandria:define-constant +linear+ GL_LINEAR)
(alexandria:define-constant +nearest-mipmap-nearest+ GL_NEAREST_MIPMAP_NEAREST)
(alexandria:define-constant +linear-mipmap-nearest+ GL_LINEAR_MIPMAP_NEAREST)
(alexandria:define-constant +nearest-mipmap-linear+ GL_NEAREST_MIPMAP_LINEAR)
(alexandria:define-constant +linear-mipmap-linear+ GL_LINEAR_MIPMAP_LINEAR)
(alexandria:define-constant +texture-mag-filter+ GL_TEXTURE_MAG_FILTER)
(alexandria:define-constant +texture-min-filter+ GL_TEXTURE_MIN_FILTER)
(alexandria:define-constant +texture-wrap-s+ GL_TEXTURE_WRAP_S)
(alexandria:define-constant +texture-wrap-t+ GL_TEXTURE_WRAP_T)
(alexandria:define-constant +clamp+ GL_CLAMP)
(alexandria:define-constant +repeat+ GL_REPEAT)
(alexandria:define-constant +client-pixel-store-bit+ GL_CLIENT_PIXEL_STORE_BIT)
(alexandria:define-constant +client-vertex-array-bit+ GL_CLIENT_VERTEX_ARRAY_BIT)
(alexandria:define-constant +client-all-attrib-bits+ GL_CLIENT_ALL_ATTRIB_BITS)
(alexandria:define-constant +polygon-offset-factor+ GL_POLYGON_OFFSET_FACTOR)
(alexandria:define-constant +polygon-offset-units+ GL_POLYGON_OFFSET_UNITS)
(alexandria:define-constant +polygon-offset-point+ GL_POLYGON_OFFSET_POINT)
(alexandria:define-constant +polygon-offset-line+ GL_POLYGON_OFFSET_LINE)
(alexandria:define-constant +polygon-offset-fill+ GL_POLYGON_OFFSET_FILL)
(alexandria:define-constant +alpha4+ GL_ALPHA4)
(alexandria:define-constant +alpha8+ GL_ALPHA8)
(alexandria:define-constant +alpha12+ GL_ALPHA12)
(alexandria:define-constant +alpha16+ GL_ALPHA16)
(alexandria:define-constant +luminance4+ GL_LUMINANCE4)
(alexandria:define-constant +luminance8+ GL_LUMINANCE8)
(alexandria:define-constant +luminance12+ GL_LUMINANCE12)
(alexandria:define-constant +luminance16+ GL_LUMINANCE16)
(alexandria:define-constant +luminance4-alpha4+ GL_LUMINANCE4_ALPHA4)
(alexandria:define-constant +luminance6-alpha2+ GL_LUMINANCE6_ALPHA2)
(alexandria:define-constant +luminance8-alpha8+ GL_LUMINANCE8_ALPHA8)
(alexandria:define-constant +luminance12-alpha4+ GL_LUMINANCE12_ALPHA4)
(alexandria:define-constant +luminance12-alpha12+ GL_LUMINANCE12_ALPHA12)
(alexandria:define-constant +luminance16-alpha16+ GL_LUMINANCE16_ALPHA16)
(alexandria:define-constant +intensity+ GL_INTENSITY)
(alexandria:define-constant +intensity4+ GL_INTENSITY4)
(alexandria:define-constant +intensity8+ GL_INTENSITY8)
(alexandria:define-constant +intensity12+ GL_INTENSITY12)
(alexandria:define-constant +intensity16+ GL_INTENSITY16)
(alexandria:define-constant +r3-g3-b2+ GL_R3_G3_B2)
(alexandria:define-constant +rgb4+ GL_RGB4)
(alexandria:define-constant +rgb5+ GL_RGB5)
(alexandria:define-constant +rgb8+ GL_RGB8)
(alexandria:define-constant +rgb10+ GL_RGB10)
(alexandria:define-constant +rgb12+ GL_RGB12)
(alexandria:define-constant +rgb16+ GL_RGB16)
(alexandria:define-constant +rgba2+ GL_RGBA2)
(alexandria:define-constant +rgba4+ GL_RGBA4)
(alexandria:define-constant +rgb5-a1+ GL_RGB5_A1)
(alexandria:define-constant +rgba8+ GL_RGBA8)
(alexandria:define-constant +rgb10-a2+ GL_RGB10_A2)
(alexandria:define-constant +rgba12+ GL_RGBA12)
(alexandria:define-constant +rgba16+ GL_RGBA16)
(alexandria:define-constant +texture-red-size+ GL_TEXTURE_RED_SIZE)
(alexandria:define-constant +texture-green-size+ GL_TEXTURE_GREEN_SIZE)
(alexandria:define-constant +texture-blue-size+ GL_TEXTURE_BLUE_SIZE)
(alexandria:define-constant +texture-alpha-size+ GL_TEXTURE_ALPHA_SIZE)
(alexandria:define-constant +texture-luminance-size+ GL_TEXTURE_LUMINANCE_SIZE)
(alexandria:define-constant +texture-intensity-size+ GL_TEXTURE_INTENSITY_SIZE)
(alexandria:define-constant +proxy-texture-1d+ GL_PROXY_TEXTURE_1D)
(alexandria:define-constant +proxy-texture-2d+ GL_PROXY_TEXTURE_2D)
(alexandria:define-constant +texture-priority+ GL_TEXTURE_PRIORITY)
(alexandria:define-constant +texture-resident+ GL_TEXTURE_RESIDENT)
(alexandria:define-constant +texture-binding-1d+ GL_TEXTURE_BINDING_1D)
(alexandria:define-constant +texture-binding-2d+ GL_TEXTURE_BINDING_2D)
(alexandria:define-constant +texture-binding-3d+ GL_TEXTURE_BINDING_3D)
(alexandria:define-constant +vertex-array+ GL_VERTEX_ARRAY)
(alexandria:define-constant +normal-array+ GL_NORMAL_ARRAY)
(alexandria:define-constant +color-array+ GL_COLOR_ARRAY)
(alexandria:define-constant +index-array+ GL_INDEX_ARRAY)
(alexandria:define-constant +texture-coord-array+ GL_TEXTURE_COORD_ARRAY)
(alexandria:define-constant +edge-flag-array+ GL_EDGE_FLAG_ARRAY)
(alexandria:define-constant +vertex-array-size+ GL_VERTEX_ARRAY_SIZE)
(alexandria:define-constant +vertex-array-type+ GL_VERTEX_ARRAY_TYPE)
(alexandria:define-constant +vertex-array-stride+ GL_VERTEX_ARRAY_STRIDE)
(alexandria:define-constant +normal-array-type+ GL_NORMAL_ARRAY_TYPE)
(alexandria:define-constant +normal-array-stride+ GL_NORMAL_ARRAY_STRIDE)
(alexandria:define-constant +color-array-size+ GL_COLOR_ARRAY_SIZE)
(alexandria:define-constant +color-array-type+ GL_COLOR_ARRAY_TYPE)
(alexandria:define-constant +color-array-stride+ GL_COLOR_ARRAY_STRIDE)
(alexandria:define-constant +index-array-type+ GL_INDEX_ARRAY_TYPE)
(alexandria:define-constant +index-array-stride+ GL_INDEX_ARRAY_STRIDE)
(alexandria:define-constant +texture-coord-array-size+ GL_TEXTURE_COORD_ARRAY_SIZE)
(alexandria:define-constant +texture-coord-array-type+ GL_TEXTURE_COORD_ARRAY_TYPE)
(alexandria:define-constant +texture-coord-array-stride+ GL_TEXTURE_COORD_ARRAY_STRIDE)
(alexandria:define-constant +edge-flag-array-stride+ GL_EDGE_FLAG_ARRAY_STRIDE)
(alexandria:define-constant +vertex-array-pointer+ GL_VERTEX_ARRAY_POINTER)
(alexandria:define-constant +normal-array-pointer+ GL_NORMAL_ARRAY_POINTER)
(alexandria:define-constant +color-array-pointer+ GL_COLOR_ARRAY_POINTER)
(alexandria:define-constant +index-array-pointer+ GL_INDEX_ARRAY_POINTER)
(alexandria:define-constant +texture-coord-array-pointer+ GL_TEXTURE_COORD_ARRAY_POINTER)
(alexandria:define-constant +edge-flag-array-pointer+ GL_EDGE_FLAG_ARRAY_POINTER)
(alexandria:define-constant +v2f+ GL_V2F)
(alexandria:define-constant +v3f+ GL_V3F)
(alexandria:define-constant +c4ub-v2f+ GL_C4UB_V2F)
(alexandria:define-constant +c4ub-v3f+ GL_C4UB_V3F)
(alexandria:define-constant +c3f-v3f+ GL_C3F_V3F)
(alexandria:define-constant +n3f-v3f+ GL_N3F_V3F)
(alexandria:define-constant +c4f-n3f-v3f+ GL_C4F_N3F_V3F)
(alexandria:define-constant +t2f-v3f+ GL_T2F_V3F)
(alexandria:define-constant +t4f-v4f+ GL_T4F_V4F)
(alexandria:define-constant +t2f-c4ub-v3f+ GL_T2F_C4UB_V3F)
(alexandria:define-constant +t2f-c3f-v3f+ GL_T2F_C3F_V3F)
(alexandria:define-constant +t2f-n3f-v3f+ GL_T2F_N3F_V3F)
(alexandria:define-constant +t2f-c4f-n3f-v3f+ GL_T2F_C4F_N3F_V3F)
(alexandria:define-constant +t4f-c4f-n3f-v4f+ GL_T4F_C4F_N3F_V4F)
(alexandria:define-constant +bgr+ GL_BGR)
(alexandria:define-constant +bgra+ GL_BGRA)
(alexandria:define-constant +constant-color+ GL_CONSTANT_COLOR)
(alexandria:define-constant +one-minus-constant-color+ GL_ONE_MINUS_CONSTANT_COLOR)
(alexandria:define-constant +constant-alpha+ GL_CONSTANT_ALPHA)
(alexandria:define-constant +one-minus-constant-alpha+ GL_ONE_MINUS_CONSTANT_ALPHA)
(alexandria:define-constant +blend-color+ GL_BLEND_COLOR)
(alexandria:define-constant +func-add+ GL_FUNC_ADD)
(alexandria:define-constant +min+ GL_MIN)
(alexandria:define-constant +max+ GL_MAX)
(alexandria:define-constant +blend-equation+ GL_BLEND_EQUATION)
(alexandria:define-constant +blend-equation-rgb+ GL_BLEND_EQUATION_RGB)
(alexandria:define-constant +blend-equation-alpha+ GL_BLEND_EQUATION_ALPHA)
(alexandria:define-constant +func-subtract+ GL_FUNC_SUBTRACT)
(alexandria:define-constant +func-reverse-subtract+ GL_FUNC_REVERSE_SUBTRACT)
(alexandria:define-constant +color-matrix+ GL_COLOR_MATRIX)
(alexandria:define-constant +color-matrix-stack-depth+ GL_COLOR_MATRIX_STACK_DEPTH)
(alexandria:define-constant +max-color-matrix-stack-depth+ GL_MAX_COLOR_MATRIX_STACK_DEPTH)
(alexandria:define-constant +post-color-matrix-red-scale+ GL_POST_COLOR_MATRIX_RED_SCALE)
(alexandria:define-constant +post-color-matrix-green-scale+ GL_POST_COLOR_MATRIX_GREEN_SCALE)
(alexandria:define-constant +post-color-matrix-blue-scale+ GL_POST_COLOR_MATRIX_BLUE_SCALE)
(alexandria:define-constant +post-color-matrix-alpha-scale+ GL_POST_COLOR_MATRIX_ALPHA_SCALE)
(alexandria:define-constant +post-color-matrix-red-bias+ GL_POST_COLOR_MATRIX_RED_BIAS)
(alexandria:define-constant +post-color-matrix-green-bias+ GL_POST_COLOR_MATRIX_GREEN_BIAS)
(alexandria:define-constant +post-color-matrix-blue-bias+ GL_POST_COLOR_MATRIX_BLUE_BIAS)
(alexandria:define-constant +post-color-matrix-alpha-bias+ GL_POST_COLOR_MATRIX_ALPHA_BIAS)
(alexandria:define-constant +color-table+ GL_COLOR_TABLE)
(alexandria:define-constant +post-convolution-color-table+ GL_POST_CONVOLUTION_COLOR_TABLE)
(alexandria:define-constant +post-color-matrix-color-table+ GL_POST_COLOR_MATRIX_COLOR_TABLE)
(alexandria:define-constant +proxy-color-table+ GL_PROXY_COLOR_TABLE)
(alexandria:define-constant +proxy-post-convolution-color-table+ GL_PROXY_POST_CONVOLUTION_COLOR_TABLE)
(alexandria:define-constant +proxy-post-color-matrix-color-table+ GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE)
(alexandria:define-constant +color-table-scale+ GL_COLOR_TABLE_SCALE)
(alexandria:define-constant +color-table-bias+ GL_COLOR_TABLE_BIAS)
(alexandria:define-constant +color-table-format+ GL_COLOR_TABLE_FORMAT)
(alexandria:define-constant +color-table-width+ GL_COLOR_TABLE_WIDTH)
(alexandria:define-constant +color-table-red-size+ GL_COLOR_TABLE_RED_SIZE)
(alexandria:define-constant +color-table-green-size+ GL_COLOR_TABLE_GREEN_SIZE)
(alexandria:define-constant +color-table-blue-size+ GL_COLOR_TABLE_BLUE_SIZE)
(alexandria:define-constant +color-table-alpha-size+ GL_COLOR_TABLE_ALPHA_SIZE)
(alexandria:define-constant +color-table-luminance-size+ GL_COLOR_TABLE_LUMINANCE_SIZE)
(alexandria:define-constant +color-table-intensity-size+ GL_COLOR_TABLE_INTENSITY_SIZE)
(alexandria:define-constant +convolution-1d+ GL_CONVOLUTION_1D)
(alexandria:define-constant +convolution-2d+ GL_CONVOLUTION_2D)
(alexandria:define-constant +separable-2d+ GL_SEPARABLE_2D)
(alexandria:define-constant +convolution-border-mode+ GL_CONVOLUTION_BORDER_MODE)
(alexandria:define-constant +convolution-filter-scale+ GL_CONVOLUTION_FILTER_SCALE)
(alexandria:define-constant +convolution-filter-bias+ GL_CONVOLUTION_FILTER_BIAS)
(alexandria:define-constant +reduce+ GL_REDUCE)
(alexandria:define-constant +convolution-format+ GL_CONVOLUTION_FORMAT)
(alexandria:define-constant +convolution-width+ GL_CONVOLUTION_WIDTH)
(alexandria:define-constant +convolution-height+ GL_CONVOLUTION_HEIGHT)
(alexandria:define-constant +max-convolution-width+ GL_MAX_CONVOLUTION_WIDTH)
(alexandria:define-constant +max-convolution-height+ GL_MAX_CONVOLUTION_HEIGHT)
(alexandria:define-constant +post-convolution-red-scale+ GL_POST_CONVOLUTION_RED_SCALE)
(alexandria:define-constant +post-convolution-green-scale+ GL_POST_CONVOLUTION_GREEN_SCALE)
(alexandria:define-constant +post-convolution-blue-scale+ GL_POST_CONVOLUTION_BLUE_SCALE)
(alexandria:define-constant +post-convolution-alpha-scale+ GL_POST_CONVOLUTION_ALPHA_SCALE)
(alexandria:define-constant +post-convolution-red-bias+ GL_POST_CONVOLUTION_RED_BIAS)
(alexandria:define-constant +post-convolution-green-bias+ GL_POST_CONVOLUTION_GREEN_BIAS)
(alexandria:define-constant +post-convolution-blue-bias+ GL_POST_CONVOLUTION_BLUE_BIAS)
(alexandria:define-constant +post-convolution-alpha-bias+ GL_POST_CONVOLUTION_ALPHA_BIAS)
(alexandria:define-constant +constant-border+ GL_CONSTANT_BORDER)
(alexandria:define-constant +replicate-border+ GL_REPLICATE_BORDER)
(alexandria:define-constant +convolution-border-color+ GL_CONVOLUTION_BORDER_COLOR)
(alexandria:define-constant +max-elements-vertices+ GL_MAX_ELEMENTS_VERTICES)
(alexandria:define-constant +max-elements-indices+ GL_MAX_ELEMENTS_INDICES)
(alexandria:define-constant +histogram+ GL_HISTOGRAM)
(alexandria:define-constant +proxy-histogram+ GL_PROXY_HISTOGRAM)
(alexandria:define-constant +histogram-width+ GL_HISTOGRAM_WIDTH)
(alexandria:define-constant +histogram-format+ GL_HISTOGRAM_FORMAT)
(alexandria:define-constant +histogram-red-size+ GL_HISTOGRAM_RED_SIZE)
(alexandria:define-constant +histogram-green-size+ GL_HISTOGRAM_GREEN_SIZE)
(alexandria:define-constant +histogram-blue-size+ GL_HISTOGRAM_BLUE_SIZE)
(alexandria:define-constant +histogram-alpha-size+ GL_HISTOGRAM_ALPHA_SIZE)
(alexandria:define-constant +histogram-luminance-size+ GL_HISTOGRAM_LUMINANCE_SIZE)
(alexandria:define-constant +histogram-sink+ GL_HISTOGRAM_SINK)
(alexandria:define-constant +minmax+ GL_MINMAX)
(alexandria:define-constant +minmax-format+ GL_MINMAX_FORMAT)
(alexandria:define-constant +minmax-sink+ GL_MINMAX_SINK)
(alexandria:define-constant +table-too-large+ GL_TABLE_TOO_LARGE)
(alexandria:define-constant +unsigned-byte-3-3-2+ GL_UNSIGNED_BYTE_3_3_2)
(alexandria:define-constant +unsigned-short-4-4-4-4+ GL_UNSIGNED_SHORT_4_4_4_4)
(alexandria:define-constant +unsigned-short-5-5-5-1+ GL_UNSIGNED_SHORT_5_5_5_1)
(alexandria:define-constant +unsigned-int-8-8-8-8+ GL_UNSIGNED_INT_8_8_8_8)
(alexandria:define-constant +unsigned-int-10-10-10-2+ GL_UNSIGNED_INT_10_10_10_2)
(alexandria:define-constant +unsigned-byte-2-3-3-rev+ GL_UNSIGNED_BYTE_2_3_3_REV)
(alexandria:define-constant +unsigned-short-5-6-5+ GL_UNSIGNED_SHORT_5_6_5)
(alexandria:define-constant +unsigned-short-5-6-5-rev+ GL_UNSIGNED_SHORT_5_6_5_REV)
(alexandria:define-constant +unsigned-short-4-4-4-4-rev+ GL_UNSIGNED_SHORT_4_4_4_4_REV)
(alexandria:define-constant +unsigned-short-1-5-5-5-rev+ GL_UNSIGNED_SHORT_1_5_5_5_REV)
(alexandria:define-constant +unsigned-int-8-8-8-8-rev+ GL_UNSIGNED_INT_8_8_8_8_REV)
(alexandria:define-constant +unsigned-int-2-10-10-10-rev+ GL_UNSIGNED_INT_2_10_10_10_REV)
(alexandria:define-constant +rescale-normal+ GL_RESCALE_NORMAL)
(alexandria:define-constant +light-model-color-control+ GL_LIGHT_MODEL_COLOR_CONTROL)
(alexandria:define-constant +single-color+ GL_SINGLE_COLOR)
(alexandria:define-constant +separate-specular-color+ GL_SEPARATE_SPECULAR_COLOR)
(alexandria:define-constant +pack-skip-images+ GL_PACK_SKIP_IMAGES)
(alexandria:define-constant +pack-image-height+ GL_PACK_IMAGE_HEIGHT)
(alexandria:define-constant +unpack-skip-images+ GL_UNPACK_SKIP_IMAGES)
(alexandria:define-constant +unpack-image-height+ GL_UNPACK_IMAGE_HEIGHT)
(alexandria:define-constant +texture-3d+ GL_TEXTURE_3D)
(alexandria:define-constant +proxy-texture-3d+ GL_PROXY_TEXTURE_3D)
(alexandria:define-constant +texture-depth+ GL_TEXTURE_DEPTH)
(alexandria:define-constant +texture-wrap-r+ GL_TEXTURE_WRAP_R)
(alexandria:define-constant +max-3d-texture-size+ GL_MAX_3D_TEXTURE_SIZE)
(alexandria:define-constant +clamp-to-edge+ GL_CLAMP_TO_EDGE)
(alexandria:define-constant +clamp-to-border+ GL_CLAMP_TO_BORDER)
(alexandria:define-constant +texture-min-lod+ GL_TEXTURE_MIN_LOD)
(alexandria:define-constant +texture-max-lod+ GL_TEXTURE_MAX_LOD)
(alexandria:define-constant +texture-base-level+ GL_TEXTURE_BASE_LEVEL)
(alexandria:define-constant +texture-max-level+ GL_TEXTURE_MAX_LEVEL)
(alexandria:define-constant +smooth-point-size-range+ GL_SMOOTH_POINT_SIZE_RANGE)
(alexandria:define-constant +smooth-point-size-granularity+ GL_SMOOTH_POINT_SIZE_GRANULARITY)
(alexandria:define-constant +smooth-line-width-range+ GL_SMOOTH_LINE_WIDTH_RANGE)
(alexandria:define-constant +smooth-line-width-granularity+ GL_SMOOTH_LINE_WIDTH_GRANULARITY)
(alexandria:define-constant +aliased-point-size-range+ GL_ALIASED_POINT_SIZE_RANGE)
(alexandria:define-constant +aliased-line-width-range+ GL_ALIASED_LINE_WIDTH_RANGE)
(alexandria:define-constant +texture0+ GL_TEXTURE0)
(alexandria:define-constant +texture1+ GL_TEXTURE1)
(alexandria:define-constant +texture2+ GL_TEXTURE2)
(alexandria:define-constant +texture3+ GL_TEXTURE3)
(alexandria:define-constant +texture4+ GL_TEXTURE4)
(alexandria:define-constant +texture5+ GL_TEXTURE5)
(alexandria:define-constant +texture6+ GL_TEXTURE6)
(alexandria:define-constant +texture7+ GL_TEXTURE7)
(alexandria:define-constant +texture8+ GL_TEXTURE8)
(alexandria:define-constant +texture9+ GL_TEXTURE9)
(alexandria:define-constant +texture10+ GL_TEXTURE10)
(alexandria:define-constant +texture11+ GL_TEXTURE11)
(alexandria:define-constant +texture12+ GL_TEXTURE12)
(alexandria:define-constant +texture13+ GL_TEXTURE13)
(alexandria:define-constant +texture14+ GL_TEXTURE14)
(alexandria:define-constant +texture15+ GL_TEXTURE15)
(alexandria:define-constant +texture16+ GL_TEXTURE16)
(alexandria:define-constant +texture17+ GL_TEXTURE17)
(alexandria:define-constant +texture18+ GL_TEXTURE18)
(alexandria:define-constant +texture19+ GL_TEXTURE19)
(alexandria:define-constant +texture20+ GL_TEXTURE20)
(alexandria:define-constant +texture21+ GL_TEXTURE21)
(alexandria:define-constant +texture22+ GL_TEXTURE22)
(alexandria:define-constant +texture23+ GL_TEXTURE23)
(alexandria:define-constant +texture24+ GL_TEXTURE24)
(alexandria:define-constant +texture25+ GL_TEXTURE25)
(alexandria:define-constant +texture26+ GL_TEXTURE26)
(alexandria:define-constant +texture27+ GL_TEXTURE27)
(alexandria:define-constant +texture28+ GL_TEXTURE28)
(alexandria:define-constant +texture29+ GL_TEXTURE29)
(alexandria:define-constant +texture30+ GL_TEXTURE30)
(alexandria:define-constant +texture31+ GL_TEXTURE31)
(alexandria:define-constant +active-texture+ GL_ACTIVE_TEXTURE)
(alexandria:define-constant +client-active-texture+ GL_CLIENT_ACTIVE_TEXTURE)
(alexandria:define-constant +max-texture-units+ GL_MAX_TEXTURE_UNITS)
(alexandria:define-constant +combine+ GL_COMBINE)
(alexandria:define-constant +combine-rgb+ GL_COMBINE_RGB)
(alexandria:define-constant +combine-alpha+ GL_COMBINE_ALPHA)
(alexandria:define-constant +rgb-scale+ GL_RGB_SCALE)
(alexandria:define-constant +add-signed+ GL_ADD_SIGNED)
(alexandria:define-constant +interpolate+ GL_INTERPOLATE)
(alexandria:define-constant +constant+ GL_CONSTANT)
(alexandria:define-constant +primary-color+ GL_PRIMARY_COLOR)
(alexandria:define-constant +previous+ GL_PREVIOUS)
(alexandria:define-constant +subtract+ GL_SUBTRACT)
(alexandria:define-constant +src0-rgb+ GL_SRC0_RGB)
(alexandria:define-constant +src1-rgb+ GL_SRC1_RGB)
(alexandria:define-constant +src2-rgb+ GL_SRC2_RGB)
(alexandria:define-constant +src3-rgb+ GL_SRC3_RGB)
(alexandria:define-constant +src4-rgb+ GL_SRC4_RGB)
(alexandria:define-constant +src5-rgb+ GL_SRC5_RGB)
(alexandria:define-constant +src6-rgb+ GL_SRC6_RGB)
(alexandria:define-constant +src7-rgb+ GL_SRC7_RGB)
(alexandria:define-constant +src0-alpha+ GL_SRC0_ALPHA)
(alexandria:define-constant +src1-alpha+ GL_SRC1_ALPHA)
(alexandria:define-constant +src2-alpha+ GL_SRC2_ALPHA)
(alexandria:define-constant +src3-alpha+ GL_SRC3_ALPHA)
(alexandria:define-constant +src4-alpha+ GL_SRC4_ALPHA)
(alexandria:define-constant +src5-alpha+ GL_SRC5_ALPHA)
(alexandria:define-constant +src6-alpha+ GL_SRC6_ALPHA)
(alexandria:define-constant +src7-alpha+ GL_SRC7_ALPHA)
(alexandria:define-constant +source0-rgb+ GL_SOURCE0_RGB)
(alexandria:define-constant +source1-rgb+ GL_SOURCE1_RGB)
(alexandria:define-constant +source2-rgb+ GL_SOURCE2_RGB)
(alexandria:define-constant +source3-rgb+ GL_SOURCE3_RGB)
(alexandria:define-constant +source4-rgb+ GL_SOURCE4_RGB)
(alexandria:define-constant +source5-rgb+ GL_SOURCE5_RGB)
(alexandria:define-constant +source6-rgb+ GL_SOURCE6_RGB)
(alexandria:define-constant +source7-rgb+ GL_SOURCE7_RGB)
(alexandria:define-constant +source0-alpha+ GL_SOURCE0_ALPHA)
(alexandria:define-constant +source1-alpha+ GL_SOURCE1_ALPHA)
(alexandria:define-constant +source2-alpha+ GL_SOURCE2_ALPHA)
(alexandria:define-constant +source3-alpha+ GL_SOURCE3_ALPHA)
(alexandria:define-constant +source4-alpha+ GL_SOURCE4_ALPHA)
(alexandria:define-constant +source5-alpha+ GL_SOURCE5_ALPHA)
(alexandria:define-constant +source6-alpha+ GL_SOURCE6_ALPHA)
(alexandria:define-constant +source7-alpha+ GL_SOURCE7_ALPHA)
(alexandria:define-constant +operand0-rgb+ GL_OPERAND0_RGB)
(alexandria:define-constant +operand1-rgb+ GL_OPERAND1_RGB)
(alexandria:define-constant +operand2-rgb+ GL_OPERAND2_RGB)
(alexandria:define-constant +operand3-rgb+ GL_OPERAND3_RGB)
(alexandria:define-constant +operand4-rgb+ GL_OPERAND4_RGB)
(alexandria:define-constant +operand5-rgb+ GL_OPERAND5_RGB)
(alexandria:define-constant +operand6-rgb+ GL_OPERAND6_RGB)
(alexandria:define-constant +operand7-rgb+ GL_OPERAND7_RGB)
(alexandria:define-constant +operand0-alpha+ GL_OPERAND0_ALPHA)
(alexandria:define-constant +operand1-alpha+ GL_OPERAND1_ALPHA)
(alexandria:define-constant +operand2-alpha+ GL_OPERAND2_ALPHA)
(alexandria:define-constant +operand3-alpha+ GL_OPERAND3_ALPHA)
(alexandria:define-constant +operand4-alpha+ GL_OPERAND4_ALPHA)
(alexandria:define-constant +operand5-alpha+ GL_OPERAND5_ALPHA)
(alexandria:define-constant +operand6-alpha+ GL_OPERAND6_ALPHA)
(alexandria:define-constant +operand7-alpha+ GL_OPERAND7_ALPHA)
(alexandria:define-constant +dot3-rgb+ GL_DOT3_RGB)
(alexandria:define-constant +dot3-rgba+ GL_DOT3_RGBA)
(alexandria:define-constant +transpose-modelview-matrix+ GL_TRANSPOSE_MODELVIEW_MATRIX)
(alexandria:define-constant +transpose-projection-matrix+ GL_TRANSPOSE_PROJECTION_MATRIX)
(alexandria:define-constant +transpose-texture-matrix+ GL_TRANSPOSE_TEXTURE_MATRIX)
(alexandria:define-constant +transpose-color-matrix+ GL_TRANSPOSE_COLOR_MATRIX)
(alexandria:define-constant +normal-map+ GL_NORMAL_MAP)
(alexandria:define-constant +reflection-map+ GL_REFLECTION_MAP)
(alexandria:define-constant +texture-cube-map+ GL_TEXTURE_CUBE_MAP)
(alexandria:define-constant +texture-binding-cube-map+ GL_TEXTURE_BINDING_CUBE_MAP)
(alexandria:define-constant +texture-cube-map-positive-x+ GL_TEXTURE_CUBE_MAP_POSITIVE_X)
(alexandria:define-constant +texture-cube-map-negative-x+ GL_TEXTURE_CUBE_MAP_NEGATIVE_X)
(alexandria:define-constant +texture-cube-map-positive-y+ GL_TEXTURE_CUBE_MAP_POSITIVE_Y)
(alexandria:define-constant +texture-cube-map-negative-y+ GL_TEXTURE_CUBE_MAP_NEGATIVE_Y)
(alexandria:define-constant +texture-cube-map-positive-z+ GL_TEXTURE_CUBE_MAP_POSITIVE_Z)
(alexandria:define-constant +texture-cube-map-negative-z+ GL_TEXTURE_CUBE_MAP_NEGATIVE_Z)
(alexandria:define-constant +proxy-texture-cube-map+ GL_PROXY_TEXTURE_CUBE_MAP)
(alexandria:define-constant +max-cube-map-texture-size+ GL_MAX_CUBE_MAP_TEXTURE_SIZE)
(alexandria:define-constant +compressed-alpha+ GL_COMPRESSED_ALPHA)
(alexandria:define-constant +compressed-luminance+ GL_COMPRESSED_LUMINANCE)
(alexandria:define-constant +compressed-luminance-alpha+ GL_COMPRESSED_LUMINANCE_ALPHA)
(alexandria:define-constant +compressed-intensity+ GL_COMPRESSED_INTENSITY)
(alexandria:define-constant +compressed-rgb+ GL_COMPRESSED_RGB)
(alexandria:define-constant +compressed-rgba+ GL_COMPRESSED_RGBA)
(alexandria:define-constant +texture-compression-hint+ GL_TEXTURE_COMPRESSION_HINT)
(alexandria:define-constant +texture-compressed-image-size+ GL_TEXTURE_COMPRESSED_IMAGE_SIZE)
(alexandria:define-constant +texture-compressed+ GL_TEXTURE_COMPRESSED)
(alexandria:define-constant +num-compressed-texture-formats+ GL_NUM_COMPRESSED_TEXTURE_FORMATS)
(alexandria:define-constant +compressed-texture-formats+ GL_COMPRESSED_TEXTURE_FORMATS)
(alexandria:define-constant +multisample+ GL_MULTISAMPLE)
(alexandria:define-constant +sample-alpha-to-coverage+ GL_SAMPLE_ALPHA_TO_COVERAGE)
(alexandria:define-constant +sample-alpha-to-one+ GL_SAMPLE_ALPHA_TO_ONE)
(alexandria:define-constant +sample-coverage+ GL_SAMPLE_COVERAGE)
(alexandria:define-constant +sample-buffers+ GL_SAMPLE_BUFFERS)
(alexandria:define-constant +samples+ GL_SAMPLES)
(alexandria:define-constant +sample-coverage-value+ GL_SAMPLE_COVERAGE_VALUE)
(alexandria:define-constant +sample-coverage-invert+ GL_SAMPLE_COVERAGE_INVERT)
(alexandria:define-constant +multisample-bit+ GL_MULTISAMPLE_BIT)
(alexandria:define-constant +depth-component16+ GL_DEPTH_COMPONENT16)
(alexandria:define-constant +depth-component24+ GL_DEPTH_COMPONENT24)
(alexandria:define-constant +depth-component32+ GL_DEPTH_COMPONENT32)
(alexandria:define-constant +texture-depth-size+ GL_TEXTURE_DEPTH_SIZE)
(alexandria:define-constant +depth-texture-mode+ GL_DEPTH_TEXTURE_MODE)
(alexandria:define-constant +texture-compare-mode+ GL_TEXTURE_COMPARE_MODE)
(alexandria:define-constant +texture-compare-func+ GL_TEXTURE_COMPARE_FUNC)
(alexandria:define-constant +compare-r-to-texture+ GL_COMPARE_R_TO_TEXTURE)
(alexandria:define-constant +query-counter-bits+ GL_QUERY_COUNTER_BITS)
(alexandria:define-constant +current-query+ GL_CURRENT_QUERY)
(alexandria:define-constant +query-result+ GL_QUERY_RESULT)
(alexandria:define-constant +query-result-available+ GL_QUERY_RESULT_AVAILABLE)
(alexandria:define-constant +samples-passed+ GL_SAMPLES_PASSED)
(alexandria:define-constant +fog-coord-src+ GL_FOG_COORD_SRC)
(alexandria:define-constant +fog-coord+ GL_FOG_COORD)
(alexandria:define-constant +fragment-depth+ GL_FRAGMENT_DEPTH)
(alexandria:define-constant +current-fog-coord+ GL_CURRENT_FOG_COORD)
(alexandria:define-constant +fog-coord-array-type+ GL_FOG_COORD_ARRAY_TYPE)
(alexandria:define-constant +fog-coord-array-stride+ GL_FOG_COORD_ARRAY_STRIDE)
(alexandria:define-constant +fog-coord-array-pointer+ GL_FOG_COORD_ARRAY_POINTER)
(alexandria:define-constant +fog-coord-array+ GL_FOG_COORD_ARRAY)
(alexandria:define-constant +fog-coordinate-source+ GL_FOG_COORDINATE_SOURCE)
(alexandria:define-constant +fog-coordinate+ GL_FOG_COORDINATE)
(alexandria:define-constant +current-fog-coordinate+ GL_CURRENT_FOG_COORDINATE)
(alexandria:define-constant +fog-coordinate-array-type+ GL_FOG_COORDINATE_ARRAY_TYPE)
(alexandria:define-constant +fog-coordinate-array-stride+ GL_FOG_COORDINATE_ARRAY_STRIDE)
(alexandria:define-constant +fog-coordinate-array-pointer+ GL_FOG_COORDINATE_ARRAY_POINTER)
(alexandria:define-constant +fog-coordinate-array+ GL_FOG_COORDINATE_ARRAY)
(alexandria:define-constant +color-sum+ GL_COLOR_SUM)
(alexandria:define-constant +current-secondary-color+ GL_CURRENT_SECONDARY_COLOR)
(alexandria:define-constant +secondary-color-array-size+ GL_SECONDARY_COLOR_ARRAY_SIZE)
(alexandria:define-constant +secondary-color-array-type+ GL_SECONDARY_COLOR_ARRAY_TYPE)
(alexandria:define-constant +secondary-color-array-stride+ GL_SECONDARY_COLOR_ARRAY_STRIDE)
(alexandria:define-constant +secondary-color-array-pointer+ GL_SECONDARY_COLOR_ARRAY_POINTER)
(alexandria:define-constant +secondary-color-array+ GL_SECONDARY_COLOR_ARRAY)
(alexandria:define-constant +point-size-min+ GL_POINT_SIZE_MIN)
(alexandria:define-constant +point-size-max+ GL_POINT_SIZE_MAX)
(alexandria:define-constant +point-fade-threshold-size+ GL_POINT_FADE_THRESHOLD_SIZE)
(alexandria:define-constant +point-distance-attenuation+ GL_POINT_DISTANCE_ATTENUATION)
(alexandria:define-constant +blend-dst-rgb+ GL_BLEND_DST_RGB)
(alexandria:define-constant +blend-src-rgb+ GL_BLEND_SRC_RGB)
(alexandria:define-constant +blend-dst-alpha+ GL_BLEND_DST_ALPHA)
(alexandria:define-constant +blend-src-alpha+ GL_BLEND_SRC_ALPHA)
(alexandria:define-constant +generate-mipmap+ GL_GENERATE_MIPMAP)
(alexandria:define-constant +generate-mipmap-hint+ GL_GENERATE_MIPMAP_HINT)
(alexandria:define-constant +incr-wrap+ GL_INCR_WRAP)
(alexandria:define-constant +decr-wrap+ GL_DECR_WRAP)
(alexandria:define-constant +mirrored-repeat+ GL_MIRRORED_REPEAT)
(alexandria:define-constant +max-texture-lod-bias+ GL_MAX_TEXTURE_LOD_BIAS)
(alexandria:define-constant +texture-filter-control+ GL_TEXTURE_FILTER_CONTROL)
(alexandria:define-constant +texture-lod-bias+ GL_TEXTURE_LOD_BIAS)
(alexandria:define-constant +array-buffer+ GL_ARRAY_BUFFER)
(alexandria:define-constant +element-array-buffer+ GL_ELEMENT_ARRAY_BUFFER)
(alexandria:define-constant +array-buffer-binding+ GL_ARRAY_BUFFER_BINDING)
(alexandria:define-constant +element-array-buffer-binding+ GL_ELEMENT_ARRAY_BUFFER_BINDING)
(alexandria:define-constant +vertex-array-buffer-binding+ GL_VERTEX_ARRAY_BUFFER_BINDING)
(alexandria:define-constant +normal-array-buffer-binding+ GL_NORMAL_ARRAY_BUFFER_BINDING)
(alexandria:define-constant +color-array-buffer-binding+ GL_COLOR_ARRAY_BUFFER_BINDING)
(alexandria:define-constant +index-array-buffer-binding+ GL_INDEX_ARRAY_BUFFER_BINDING)
(alexandria:define-constant +texture-coord-array-buffer-binding+ GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING)
(alexandria:define-constant +edge-flag-array-buffer-binding+ GL_EDGE_FLAG_ARRAY_BUFFER_BINDING)
(alexandria:define-constant +secondary-color-array-buffer-binding+ GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING)
(alexandria:define-constant +fog-coord-array-buffer-binding+ GL_FOG_COORD_ARRAY_BUFFER_BINDING)
(alexandria:define-constant +weight-array-buffer-binding+ GL_WEIGHT_ARRAY_BUFFER_BINDING)
(alexandria:define-constant +vertex-attrib-array-buffer-binding+ GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING)
(alexandria:define-constant +stream-draw+ GL_STREAM_DRAW)
(alexandria:define-constant +stream-read+ GL_STREAM_READ)
(alexandria:define-constant +stream-copy+ GL_STREAM_COPY)
(alexandria:define-constant +static-draw+ GL_STATIC_DRAW)
(alexandria:define-constant +static-read+ GL_STATIC_READ)
(alexandria:define-constant +static-copy+ GL_STATIC_COPY)
(alexandria:define-constant +dynamic-draw+ GL_DYNAMIC_DRAW)
(alexandria:define-constant +dynamic-read+ GL_DYNAMIC_READ)
(alexandria:define-constant +dynamic-copy+ GL_DYNAMIC_COPY)
(alexandria:define-constant +read-only+ GL_READ_ONLY)
(alexandria:define-constant +write-only+ GL_WRITE_ONLY)
(alexandria:define-constant +read-write+ GL_READ_WRITE)
(alexandria:define-constant +buffer-size+ GL_BUFFER_SIZE)
(alexandria:define-constant +buffer-usage+ GL_BUFFER_USAGE)
(alexandria:define-constant +buffer-access+ GL_BUFFER_ACCESS)
(alexandria:define-constant +buffer-mapped+ GL_BUFFER_MAPPED)
(alexandria:define-constant +buffer-map-pointer+ GL_BUFFER_MAP_POINTER)
(alexandria:define-constant +fog-coordinate-array-buffer-binding+ GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING)
(alexandria:define-constant +current-program+ GL_CURRENT_PROGRAM)
(alexandria:define-constant +shader-type+ GL_SHADER_TYPE)
(alexandria:define-constant +delete-status+ GL_DELETE_STATUS)
(alexandria:define-constant +compile-status+ GL_COMPILE_STATUS)
(alexandria:define-constant +link-status+ GL_LINK_STATUS)
(alexandria:define-constant +validate-status+ GL_VALIDATE_STATUS)
(alexandria:define-constant +info-log-length+ GL_INFO_LOG_LENGTH)
(alexandria:define-constant +attached-shaders+ GL_ATTACHED_SHADERS)
(alexandria:define-constant +active-uniforms+ GL_ACTIVE_UNIFORMS)
(alexandria:define-constant +active-uniform-max-length+ GL_ACTIVE_UNIFORM_MAX_LENGTH)
(alexandria:define-constant +shader-source-length+ GL_SHADER_SOURCE_LENGTH)
(alexandria:define-constant +float-vec2+ GL_FLOAT_VEC2)
(alexandria:define-constant +float-vec3+ GL_FLOAT_VEC3)
(alexandria:define-constant +float-vec4+ GL_FLOAT_VEC4)
(alexandria:define-constant +int-vec2+ GL_INT_VEC2)
(alexandria:define-constant +int-vec3+ GL_INT_VEC3)
(alexandria:define-constant +int-vec4+ GL_INT_VEC4)
(alexandria:define-constant +bool+ GL_BOOL)
(alexandria:define-constant +bool-vec2+ GL_BOOL_VEC2)
(alexandria:define-constant +bool-vec3+ GL_BOOL_VEC3)
(alexandria:define-constant +bool-vec4+ GL_BOOL_VEC4)
(alexandria:define-constant +float-mat2+ GL_FLOAT_MAT2)
(alexandria:define-constant +float-mat3+ GL_FLOAT_MAT3)
(alexandria:define-constant +float-mat4+ GL_FLOAT_MAT4)
(alexandria:define-constant +sampler-1d+ GL_SAMPLER_1D)
(alexandria:define-constant +sampler-2d+ GL_SAMPLER_2D)
(alexandria:define-constant +sampler-3d+ GL_SAMPLER_3D)
(alexandria:define-constant +sampler-cube+ GL_SAMPLER_CUBE)
(alexandria:define-constant +sampler-1d-shadow+ GL_SAMPLER_1D_SHADOW)
(alexandria:define-constant +sampler-2d-shadow+ GL_SAMPLER_2D_SHADOW)
(alexandria:define-constant +shading-language-version+ GL_SHADING_LANGUAGE_VERSION)
(alexandria:define-constant +vertex-shader+ GL_VERTEX_SHADER)
(alexandria:define-constant +max-vertex-uniform-components+ GL_MAX_VERTEX_UNIFORM_COMPONENTS)
(alexandria:define-constant +max-varying-floats+ GL_MAX_VARYING_FLOATS)
(alexandria:define-constant +max-vertex-texture-image-units+ GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS)
(alexandria:define-constant +max-combined-texture-image-units+ GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS)
(alexandria:define-constant +active-attributes+ GL_ACTIVE_ATTRIBUTES)
(alexandria:define-constant +active-attribute-max-length+ GL_ACTIVE_ATTRIBUTE_MAX_LENGTH)
(alexandria:define-constant +fragment-shader+ GL_FRAGMENT_SHADER)
(alexandria:define-constant +max-fragment-uniform-components+ GL_MAX_FRAGMENT_UNIFORM_COMPONENTS)
(alexandria:define-constant +fragment-shader-derivative-hint+ GL_FRAGMENT_SHADER_DERIVATIVE_HINT)
(alexandria:define-constant +max-vertex-attribs+ GL_MAX_VERTEX_ATTRIBS)
(alexandria:define-constant +vertex-attrib-array-enabled+ GL_VERTEX_ATTRIB_ARRAY_ENABLED)
(alexandria:define-constant +vertex-attrib-array-size+ GL_VERTEX_ATTRIB_ARRAY_SIZE)
(alexandria:define-constant +vertex-attrib-array-stride+ GL_VERTEX_ATTRIB_ARRAY_STRIDE)
(alexandria:define-constant +vertex-attrib-array-type+ GL_VERTEX_ATTRIB_ARRAY_TYPE)
(alexandria:define-constant +vertex-attrib-array-normalized+ GL_VERTEX_ATTRIB_ARRAY_NORMALIZED)
(alexandria:define-constant +current-vertex-attrib+ GL_CURRENT_VERTEX_ATTRIB)
(alexandria:define-constant +vertex-attrib-array-pointer+ GL_VERTEX_ATTRIB_ARRAY_POINTER)
(alexandria:define-constant +vertex-program-point-size+ GL_VERTEX_PROGRAM_POINT_SIZE)
(alexandria:define-constant +vertex-program-two-side+ GL_VERTEX_PROGRAM_TWO_SIDE)
(alexandria:define-constant +max-texture-coords+ GL_MAX_TEXTURE_COORDS)
(alexandria:define-constant +max-texture-image-units+ GL_MAX_TEXTURE_IMAGE_UNITS)
(alexandria:define-constant +max-draw-buffers+ GL_MAX_DRAW_BUFFERS)
(alexandria:define-constant +draw-buffer0+ GL_DRAW_BUFFER0)
(alexandria:define-constant +draw-buffer1+ GL_DRAW_BUFFER1)
(alexandria:define-constant +draw-buffer2+ GL_DRAW_BUFFER2)
(alexandria:define-constant +draw-buffer3+ GL_DRAW_BUFFER3)
(alexandria:define-constant +draw-buffer4+ GL_DRAW_BUFFER4)
(alexandria:define-constant +draw-buffer5+ GL_DRAW_BUFFER5)
(alexandria:define-constant +draw-buffer6+ GL_DRAW_BUFFER6)
(alexandria:define-constant +draw-buffer7+ GL_DRAW_BUFFER7)
(alexandria:define-constant +draw-buffer8+ GL_DRAW_BUFFER8)
(alexandria:define-constant +draw-buffer9+ GL_DRAW_BUFFER9)
(alexandria:define-constant +draw-buffer10+ GL_DRAW_BUFFER10)
(alexandria:define-constant +draw-buffer11+ GL_DRAW_BUFFER11)
(alexandria:define-constant +draw-buffer12+ GL_DRAW_BUFFER12)
(alexandria:define-constant +draw-buffer13+ GL_DRAW_BUFFER13)
(alexandria:define-constant +draw-buffer14+ GL_DRAW_BUFFER14)
(alexandria:define-constant +draw-buffer15+ GL_DRAW_BUFFER15)
(alexandria:define-constant +point-sprite+ GL_POINT_SPRITE)
(alexandria:define-constant +coord-replace+ GL_COORD_REPLACE)
(alexandria:define-constant +point-sprite-coord-origin+ GL_POINT_SPRITE_COORD_ORIGIN)
(alexandria:define-constant +lower-left+ GL_LOWER_LEFT)
(alexandria:define-constant +upper-left+ GL_UPPER_LEFT)
(alexandria:define-constant +stencil-back-func+ GL_STENCIL_BACK_FUNC)
(alexandria:define-constant +stencil-back-value-mask+ GL_STENCIL_BACK_VALUE_MASK)
(alexandria:define-constant +stencil-back-ref+ GL_STENCIL_BACK_REF)
(alexandria:define-constant +stencil-back-fail+ GL_STENCIL_BACK_FAIL)
(alexandria:define-constant +stencil-back-pass-depth-fail+ GL_STENCIL_BACK_PASS_DEPTH_FAIL)
(alexandria:define-constant +stencil-back-pass-depth-pass+ GL_STENCIL_BACK_PASS_DEPTH_PASS)
(alexandria:define-constant +stencil-back-writemask+ GL_STENCIL_BACK_WRITEMASK)
(alexandria:define-constant +current-raster-secondary-color+ GL_CURRENT_RASTER_SECONDARY_COLOR)
(alexandria:define-constant +pixel-pack-buffer+ GL_PIXEL_PACK_BUFFER)
(alexandria:define-constant +pixel-unpack-buffer+ GL_PIXEL_UNPACK_BUFFER)
(alexandria:define-constant +pixel-pack-buffer-binding+ GL_PIXEL_PACK_BUFFER_BINDING)
(alexandria:define-constant +pixel-unpack-buffer-binding+ GL_PIXEL_UNPACK_BUFFER_BINDING)
(alexandria:define-constant +float-mat2x3+ GL_FLOAT_MAT2X3)
(alexandria:define-constant +float-mat2x4+ GL_FLOAT_MAT2X4)
(alexandria:define-constant +float-mat3x2+ GL_FLOAT_MAT3X2)
(alexandria:define-constant +float-mat3x4+ GL_FLOAT_MAT3X4)
(alexandria:define-constant +float-mat4x2+ GL_FLOAT_MAT4X2)
(alexandria:define-constant +float-mat4x3+ GL_FLOAT_MAT4X3)
(alexandria:define-constant +srgb+ GL_SRGB)
(alexandria:define-constant +srgb8+ GL_SRGB8)
(alexandria:define-constant +srgb-alpha+ GL_SRGB_ALPHA)
(alexandria:define-constant +srgb8-alpha8+ GL_SRGB8_ALPHA8)
(alexandria:define-constant +sluminance-alpha+ GL_SLUMINANCE_ALPHA)
(alexandria:define-constant +sluminance8-alpha8+ GL_SLUMINANCE8_ALPHA8)
(alexandria:define-constant +sluminance+ GL_SLUMINANCE)
(alexandria:define-constant +sluminance8+ GL_SLUMINANCE8)
(alexandria:define-constant +compressed-srgb+ GL_COMPRESSED_SRGB)
(alexandria:define-constant +compressed-srgb-alpha+ GL_COMPRESSED_SRGB_ALPHA)
(alexandria:define-constant +compressed-sluminance+ GL_COMPRESSED_SLUMINANCE)
(alexandria:define-constant +compressed-sluminance-alpha+ GL_COMPRESSED_SLUMINANCE_ALPHA)
(alexandria:define-constant +multisample+ GL_MULTISAMPLE)

;; utils
(defmacro push-pop-matrix (&rest args)
  `(progn
     (push-matrix)
     (prog1
         (progn ,@args)
       (pop-matrix))
     ))

(defmacro push-pop-attribute (&rest args)
  `(progn
     (push-attrib +all-attrib-bits+)
     (prog1
         (progn ,@args)
       (pop-attrib))))

(defmacro disable-block (op &rest args)
  `(progn
     (disable ,op)
     (prog1
         (progn ,@args)
       (enable ,op))))

(defmacro enable-block (op &rest args)
  `(progn
     (enable ,op)
     (prog1
         (progn ,@args)
       (disable ,op))))

(defun clear-color-fv (v)
  (clear-color (elt v 0) (elt v 1) (elt v 2) (elt v 3)))

(defun clear-color-dv (v)
  (clear-color (coerce (elt v 0) 'single-float)
               (coerce (elt v 1) 'single-float)
               (coerce (elt v 2) 'single-float)
               (coerce (elt v 3) 'single-float)))


(defun vertex-3fv (v)
  (vertex-3f (elt v 0) (elt v 1) (elt v 2)))

(defun vertex-3dv (v)
  (vertex-3d (elt v 0) (elt v 1) (elt v 2)))

(defun translate-fv (v)
  (translate-f (elt v 0) (elt v 1) (elt v 2)))

(defun translate-dv (v)
  (translate-d (elt v 0) (elt v 1) (elt v 2)))

(defun normal-3fv (v)
  (normal-3f (elt v 0) (elt v 1) (elt v 2)))

(defun normal-3dv (v)
  (normal-3d (elt v 0) (elt v 1) (elt v 2)))

(defmacro command (type &rest args)
  `(progn
     (begin ,type)
     ,@args
     (end)))

(defun light-fv (op1 op2 v)
  (chimi:with-cl-sequence->cffi-array
      (vec v :float)
    (glLightfv op1 op2 vec)))

(defun material-fv (op1 op2 v)
  (with-cl-sequence->cffi-array
      (vec v :float)
    (glMaterialfv op1 op2 vec)))

(defun mult-matrix-f (v)
  (with-cl-sequence->cffi-array
      (vec v :float)
    (glMultMatrixf vec)))

(defun mult-matrix-d (v)
  (with-cl-sequence->cffi-array
      (vec v :double)
    (glMultMatrixd vec)))

(defun color-3fv (v)
  (color-3f (elt v 0) (elt v 1) (elt v 2)))

(defun color-3dv (v)
  (color-3d (elt v 0) (elt v 1) (elt v 2)))

(defun tex-coord-2fv (v)
  (tex-coord-2f (elt v 0) (elt v 1)))

(defun tex-coord-2dv (v)
  (tex-coord-2d (elt v 0) (elt v 1)))

(defun new-texture-name ()
  (with-foreign-object
      (name :int)
    (gen-textures 1 name)
    (cffi:mem-ref name :int)))

(defmacro display-list-block (&rest args)
  (let ((list (gensym)))
    `(progn
       (let ((,list (gen-lists 1)))
         (new-list ,list +compile+)
         (progn
           ,@args)
         (end-list)
         ,list))))
